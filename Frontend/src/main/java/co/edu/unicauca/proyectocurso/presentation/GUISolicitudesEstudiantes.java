/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package co.edu.unicauca.proyectocurso.presentation;

import co.edu.unicauca.proyectocurso.access.*;
import co.edu.unicauca.proyectocurso.domain.entities.*;
import co.edu.unicauca.proyectocurso.domain.services.Observer;
import co.edu.unicauca.proyectocurso.domain.services.ProjectService;
import co.edu.unicauca.proyectocurso.domain.services.StudentProjectService;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lenovo pc
 */
public class GUISolicitudesEstudiantes extends javax.swing.JFrame implements Observer {
    private IStudentRepository studentRepository = new StudentRepositoryImpl();
    private IProjectRepository projectRepository = new ProjectRepositoryImpl();
    private ProjectService projectService = new ProjectService();
    private IStudentProjectRepository studentProjectRepository = new StudentProjectRepositoryImpl() ;
    private StudentProjectService studentProjectService = new StudentProjectService(studentProjectRepository);
    DefaultTableModel model = new DefaultTableModel();
    // En GUISolicitudesEstudiantes.java


    private ICoordinatorRepository coordinatorRepository = new CoordinatorRepositoryImpl();
    private List<ApplicationDTO> listaDeSolicitudes; // <-- AHORA ES UNA LISTA DE DTOs

    /**
     * Creates new form GUISolicitudesEstudiantes
     */
    public GUISolicitudesEstudiantes() {
        initComponents();

        this.studentProjectService.addObserver(this);

        String[] columnas = { "Nombre Proyecto", "Descripción Proyecto", "Programa Estudiante" };
        model.setColumnIdentifiers(columnas);
        jTable1.setModel(model);

        cargarSolicitudesPendientes(); // Renombrado para mayor claridad
    }
    private ApplicationDTO obtenerSolicitudDeLaFila(int fila) {
        if (fila >= 0 && fila < this.listaDeSolicitudes.size()) {
            return this.listaDeSolicitudes.get(fila);
        }
        return null;
    }
    
    @Override
    public void update() {
        cargarSolicitudesPendientes();
    }


    private void cargarSolicitudesPendientes() {
        // Llama al repositorio para obtener los DTOs desde el backend
        this.listaDeSolicitudes = coordinatorRepository.getPendingApplications();
        model.setRowCount(0);

        if (this.listaDeSolicitudes == null || this.listaDeSolicitudes.isEmpty()) {
            // Manejar el caso en que no hay solicitudes
            return;
        }

        // Usa los getters del DTO para llenar la tabla
        for (ApplicationDTO dto : this.listaDeSolicitudes) {
            model.addRow(new Object[]{
                    dto.getProjectName(),
                    dto.getProjectDescription(),
                    dto.getStudentProgram()
            });
        }
    }

    /**
     * Obtiene el objeto StudentProject completo correspondiente a una fila seleccionada en la tabla.
     * @param fila El índice de la fila seleccionada.
     * @return El objeto StudentProject, o null si la selección es inválida.
     */

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        jButton3.setText("ACEPTAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable1.setModel(model);
        jScrollPane1.setViewportView(jTable1);

        jButton2.setText("RECHAZAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("ACEPTAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(97, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(209, 209, 209))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int filaSeleccionada = jTable1.getSelectedRow();
        if (filaSeleccionada < 0) {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione una solicitud para rechazar.");
            return;
        }

        // --- CORRECCIÓN 1: Usar el método y el tipo de dato correctos ---
        ApplicationDTO solicitud = obtenerSolicitudDeLaFila(filaSeleccionada);

        if (solicitud == null) {
            return; // El método obtenerSolicitudDeLaFila ya maneja el error
        }

        // --- CORRECCIÓN 2: El mensaje de confirmación ahora es para RECHAZAR ---
        int confirm = JOptionPane.showConfirmDialog(this,
                "¿Está seguro de que desea RECHAZAR la postulación del estudiante " + solicitud.getStudentFullName() + "?",
                "Confirmar Rechazo",
                JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            // --- CORRECCIÓN 3: Llamar al método correcto del repositorio ---
            boolean success = coordinatorRepository.rejectStudentApplication(
                    solicitud.getStudentId(),
                    solicitud.getProjectId()
            );

            if (success) {
                // --- CORRECCIÓN 4: El mensaje de éxito es sobre el RECHAZO ---
                JOptionPane.showMessageDialog(this, "Postulación RECHAZADA exitosamente.");
                cargarSolicitudesPendientes(); // Recargar la tabla
            } else {
                JOptionPane.showMessageDialog(this, "Ocurrió un error al rechazar la postulación.");
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int filaSeleccionada = jTable1.getSelectedRow();
        if (filaSeleccionada < 0) {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione una solicitud para aprobar.");
            return;
        }

        // Usamos el método corregido para obtener el DTO
        ApplicationDTO solicitud = obtenerSolicitudDeLaFila(filaSeleccionada);
        if (solicitud == null) {
            return; // No debería pasar si la fila es válida
        }

        int confirm = JOptionPane.showConfirmDialog(this,
                "¿Aprobar la postulación del estudiante " + solicitud.getStudentFullName() + "?",
                "Confirmar Aprobación",
                JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            // Llamamos al repositorio usando los IDs del DTO
            boolean success = coordinatorRepository.approveStudentApplication(
                    solicitud.getStudentId(),
                    solicitud.getProjectId()
            );

            if (success) {
                JOptionPane.showMessageDialog(this, "Postulación APROBADA exitosamente.");
                cargarSolicitudesPendientes(); // Recargar la tabla para que la solicitud desaparezca
            } else {
                JOptionPane.showMessageDialog(this, "Ocurrió un error al aprobar la postulación.");
            }
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUISolicitudesEstudiantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUISolicitudesEstudiantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUISolicitudesEstudiantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUISolicitudesEstudiantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUISolicitudesEstudiantes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables


}
