/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package co.edu.unicauca.proyectocurso.presentation;

import co.edu.unicauca.proyectocurso.access.IProjectStatsRepository;
import co.edu.unicauca.proyectocurso.access.IStatsRepository;
import co.edu.unicauca.proyectocurso.access.ProjectStatsRepositoryImpl;
import co.edu.unicauca.proyectocurso.access.StatsRepositoryImpl;
import co.edu.unicauca.proyectocurso.domain.entities.ProjectState;
import co.edu.unicauca.proyectocurso.domain.entities.ProjectStats;
import co.edu.unicauca.proyectocurso.domain.services.ProjectStatsService;
import java.awt.BorderLayout;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.List;
import java.util.stream.Collectors;

import org.jfree.chart.*;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;


/**
 *
 * @author Lenovo pc
 */
public class GUICoordEstadisticas extends javax.swing.JFrame {

    // --- ATRIBUTO CORREGIDO: Usamos el repositorio que habla con la API ---
    private final IStatsRepository statsRepository = new StatsRepositoryImpl();
    private List<ProjectStats> allStats; // Lista para cachear los datos del backend


    /**
     * Creates new form GUICoordEstadisticas
     */
    public GUICoordEstadisticas() {
        initComponents();
        comboPeriodos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2024-1", "2024-2", "2025-1" }));

        cargarEstadisticasCompletas();

        // Muestra el gráfico inicial
        if (this.allStats != null) {
            mostrarGrafico((String) comboPeriodos.getSelectedItem());
        }
    }
    private void cargarEstadisticasCompletas() {
        // Llama al repositorio para obtener todos los datos una sola vez
        this.allStats = statsRepository.findAll();
    }

    private void mostrarGrafico(String periodo) {
        CategoryDataset dataset = crearDatasetPorPeriodo(periodo);
        JFreeChart chart = ChartFactory.createBarChart(
                "Proyectos - Periodo " + periodo,
                "Estado",
                "Cantidad",
                dataset,
                PlotOrientation.VERTICAL,
                true, true, false
        );

        ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setPreferredSize(panelGrafica.getSize());

        panelGrafica.removeAll();
        panelGrafica.setLayout(new BorderLayout());
        panelGrafica.add(chartPanel, BorderLayout.CENTER);
        panelGrafica.validate();
        panelGrafica.repaint();
    }

    private CategoryDataset crearDatasetPorPeriodo(String periodo) {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        if (this.allStats == null) {
            return dataset;
        }

        LocalDate inicio;
        LocalDate fin;

        switch (periodo) {
            case "2024-1":
                inicio = LocalDate.of(2024, 1, 10);
                fin = LocalDate.of(2024, 6, 23);
                break;
            case "2024-2":
                inicio = LocalDate.of(2024, 7, 20);
                fin = LocalDate.of(2024, 12, 10);
                break;
            case "2025-1":
                inicio = LocalDate.of(2025, 1, 10);
                fin = LocalDate.of(2025, 6, 23);
                break;
            default:
                return dataset;
        }

        // --- LA CORRECCIÓN CLAVE ---
        // Se usa .getChangeDate() para coincidir con la definición de ProjectStats.java
        List<ProjectStats> statsFiltrados = this.allStats.stream()
                .filter(stat -> !stat.getChangeDate().isBefore(inicio) && !stat.getChangeDate().isAfter(fin))
                .collect(Collectors.toList());

        long aprobados = statsFiltrados.stream().filter(stat -> stat.getState() == ProjectState.ACCEPTED).count();
        long rechazados = statsFiltrados.stream().filter(stat -> stat.getState() == ProjectState.REJECTED).count();
        long pendientes = statsFiltrados.stream().filter(stat -> stat.getState() == ProjectState.RECEIVED).count();

        dataset.addValue(aprobados, "Aprobados", periodo);
        dataset.addValue(rechazados, "Rechazados", periodo);
        dataset.addValue(pendientes, "Pendientes", periodo);

        return dataset;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelGrafica = new javax.swing.JPanel();
        comboPeriodos = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout panelGraficaLayout = new javax.swing.GroupLayout(panelGrafica);
        panelGrafica.setLayout(panelGraficaLayout);
        panelGraficaLayout.setHorizontalGroup(
            panelGraficaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 470, Short.MAX_VALUE)
        );
        panelGraficaLayout.setVerticalGroup(
            panelGraficaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 267, Short.MAX_VALUE)
        );

        comboPeriodos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboPeriodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPeriodosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelGrafica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboPeriodos, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(comboPeriodos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(panelGrafica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboPeriodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPeriodosActionPerformed
        String periodo = (String) comboPeriodos.getSelectedItem();
        mostrarGrafico(periodo);
    }//GEN-LAST:event_comboPeriodosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUICoordEstadisticas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUICoordEstadisticas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUICoordEstadisticas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUICoordEstadisticas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUICoordEstadisticas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboPeriodos;
    private javax.swing.JPanel panelGrafica;
    // End of variables declaration//GEN-END:variables
}
